services:
  # ===========================
  # NGINX reverse proxy
  # ===========================
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      # Correct volume mount for your nginx configuration
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - portfolio_net
    depends_on:
      dashboard_frontend:
        condition: service_started
      dashboard_backend:
        condition: service_started
  
  # ===========================
  # Dashboard Frontend (Angular)
  # ===========================
  dashboard_frontend:
    build:
      context: ./apps/dashboard-admin/frontend
      dockerfile: Dockerfile
    container_name: dashboard_frontend
    ports:
      - "4200:80"   # Host 4200 â†’ container 80 (Nginx serving Angular)
    volumes:
      - ./apps/dashboard-admin/frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      # Point to the backend service name within the Docker network
      - FASTAPI_BACKEND_URL=http://dashboard_backend:8000
    networks:
      - portfolio_net
    depends_on:
      dashboard_backend:
        condition: service_healthy
  
  # ===========================
  # Portfolio Frontend (React)
  # ===========================
  # ===========================
  # Portfolio Frontend (React)
  # ===========================
  portfolio_frontend:
    build:
      context: ./apps/portfolio
      dockerfile: Dockerfile
    container_name: portfolio_frontend
    ports:
      - "3001:5173"   # React dev server host:container... Look out, as we are using Vite, you have to change it to 5173 from Vite
    volumes:
      - ./apps/portfolio:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FASTAPI_BACKEND_URL=http://dashboard_backend:8000
    networks:
      - portfolio_net
    depends_on:
      dashboard_backend:
        condition: service_healthy

  # ===========================
  # Dashboard Backend (FastAPI)
  # ===========================
  dashboard_backend:
    build: ./apps/dashboard-admin/backend/
    container_name: dashboard_backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./apps/dashboard-admin/backend/:/app
    depends_on:
      db:
        condition: service_healthy
      oracle-db:
        condition: service_healthy # Ensure both databases are healthy before the backend starts
    env_file:
      - ./.env
    networks:
      - portfolio_net
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 10s
      timeout: 5s
      retries: 1
  # ===========================
  # PostgreSQL Database
  # ===========================
  db:
    image: postgres:16-alpine
    container_name: dashboard_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - portfolio_db:/var/lib/postgresql/data
    networks:
      - portfolio_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} || exit 1"] #ensures db name user etc is ok
      interval: 5s
      timeout: 5s
      retries: 5
  # ===========================
  # Oracle Database
  # ===========================
  oracle-db:
    image: gvenzl/oracle-xe:21-slim
    container_name: oracle-db
    restart: always
    environment:
      ORACLE_PASSWORD: ${ORACLE_PASSWORD}
      ORACLE_ALLOW_REMOTE: "true"
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./dbs/oracle-init:/opt/oracle/scripts/setup  # <-- init scripts here
      - ./.env:/opt/oracle/scripts/setup/.env:ro     # <-- mount your .env here too
    networks:
      - portfolio_net
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 10s
      timeout: 5s
      retries: 1

# ===========================
# Networks
# ===========================
networks:
  portfolio_net:
    driver: bridge

# ===========================
# Volumes
# ===========================
volumes:
  portfolio_db:
    driver: local
  oracle-data:

